///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace K8_UK_PP_Regression
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The K8ReceiveSTN_PP recording.
    /// </summary>
    [TestModule("52cd503c-e354-4f03-9db5-b2c071400568", ModuleType.Recording, 1)]
    public partial class K8ReceiveSTN_PP : ITestModule
    {
        /// <summary>
        /// Holds an instance of the K8_UK_SOP_RegressionRepository repository.
        /// </summary>
        public static K8_UK_SOP_RegressionRepository repo = K8_UK_SOP_RegressionRepository.Instance;

        static K8ReceiveSTN_PP instance = new K8ReceiveSTN_PP();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public K8ReceiveSTN_PP()
        {
            DonorDepot = "IBD961";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static K8ReceiveSTN_PP Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable DonorDepot.
        /// </summary>
        [TestVariable("63b9c467-003e-4529-9027-3dd6d277180d")]
        public string DonorDepot
        {
            get { return repo.DonorDepot; }
            set { repo.DonorDepot = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Open') on item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Open'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.OpenInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.OpenInfo, "Text", "Open");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Open' at Center.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.OpenInfo, new RecordItemIndex(1));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Open.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'PurchaseOrderSearch.Text'.", repo.PurchaseOrderSearch.TextInfo, new RecordItemIndex(2));
            Validate.Exists(repo.PurchaseOrderSearch.TextInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PurchaseOrderSearch.Text' at Center.", repo.PurchaseOrderSearch.TextInfo, new RecordItemIndex(3));
            repo.PurchaseOrderSearch.Text.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DonorDepot' with focus on 'PurchaseOrderSearch.Text'.", repo.PurchaseOrderSearch.TextInfo, new RecordItemIndex(4));
            repo.PurchaseOrderSearch.Text.PressKeys(DonorDepot, 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'PurchaseOrderSearch.Text'.", repo.PurchaseOrderSearch.TextInfo, new RecordItemIndex(5));
            repo.PurchaseOrderSearch.Text.PressKeys("{Tab}", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'SearchResults.RowRow'.", repo.SearchResults.RowRowInfo, new RecordItemIndex(6));
            Validate.Exists(repo.SearchResults.RowRowInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SearchResults.RowRow' at Center.", repo.SearchResults.RowRowInfo, new RecordItemIndex(7));
            repo.SearchResults.RowRow.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Finish') on item 'SearchResults.Finish'.", repo.SearchResults.FinishInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.SearchResults.FinishInfo, "Text", "Finish");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SearchResults.Finish' at Center.", repo.SearchResults.FinishInfo, new RecordItemIndex(9));
            repo.SearchResults.Finish.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(10));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Receipts') on item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Receipts'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.ReceiptsInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.ReceiptsInfo, "Text", "Receipts");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Receipts' at Center.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.ReceiptsInfo, new RecordItemIndex(12));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Receipts.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.RowRow'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.RowRowInfo, new RecordItemIndex(13));
            Validate.Exists(repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.RowRowInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.RowRow' at Center.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.RowRowInfo, new RecordItemIndex(14));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.RowRow.Click(System.Windows.Forms.MouseButtons.Right);
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Confirm all lines') on item 'Kclient.ConfirmAllLines'.", repo.Kclient.ConfirmAllLinesInfo, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.Kclient.ConfirmAllLinesInfo, "Text", "Confirm all lines");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Kclient.ConfirmAllLines' at Center.", repo.Kclient.ConfirmAllLinesInfo, new RecordItemIndex(16));
            repo.Kclient.ConfirmAllLines.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(17));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Save'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.SaveInfo, new RecordItemIndex(18));
            Validate.Exists(repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.SaveInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Save' at Center.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.SaveInfo, new RecordItemIndex(19));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Save.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='&Yes') on item 'PurchaseOrder.ButtonYes'.", repo.PurchaseOrder.ButtonYesInfo, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.PurchaseOrder.ButtonYesInfo, "Text", "&Yes");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PurchaseOrder.ButtonYes' at Center.", repo.PurchaseOrder.ButtonYesInfo, new RecordItemIndex(21));
            repo.PurchaseOrder.ButtonYes.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(22));
            Delay.Duration(5000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
