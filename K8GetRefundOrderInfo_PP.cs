///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace K8_UK_PP_Regression
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The K8GetRefundOrderInfo_PP recording.
    /// </summary>
    [TestModule("5d3e2b4e-922a-4999-8bd2-2d9dcb28af9a", ModuleType.Recording, 1)]
    public partial class K8GetRefundOrderInfo_PP : ITestModule
    {
        /// <summary>
        /// Holds an instance of the K8_UK_SOP_RegressionRepository repository.
        /// </summary>
        public static K8_UK_SOP_RegressionRepository repo = K8_UK_SOP_RegressionRepository.Instance;

        static K8GetRefundOrderInfo_PP instance = new K8GetRefundOrderInfo_PP();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public K8GetRefundOrderInfo_PP()
        {
            RefundOrderNumber = "";
            FilePath = "C:\\Temp\\SalesOrderInfoUK.txt";
            Login = "";
            RefundInvoice = "";
            Account = "";
            RefundGoods = "";
            RefundVAT = "";
            Depot = "";
            excelFileLocation = "";
            SAPReturnsInvoice = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static K8GetRefundOrderInfo_PP Instance
        {
            get { return instance; }
        }

#region Variables

        string _RefundOrderNumber;

        /// <summary>
        /// Gets or sets the value of variable RefundOrderNumber.
        /// </summary>
        [TestVariable("a7a26294-8273-47e4-8e2f-e0a2fa00c55e")]
        public string RefundOrderNumber
        {
            get { return _RefundOrderNumber; }
            set { _RefundOrderNumber = value; }
        }

        string _FilePath;

        /// <summary>
        /// Gets or sets the value of variable FilePath.
        /// </summary>
        [TestVariable("59e85755-aabb-4616-a21b-5baa74e5f79b")]
        public string FilePath
        {
            get { return _FilePath; }
            set { _FilePath = value; }
        }

        string _Login;

        /// <summary>
        /// Gets or sets the value of variable Login.
        /// </summary>
        [TestVariable("ca44c0ff-b6a2-4070-a88c-337b282b0f3a")]
        public string Login
        {
            get { return _Login; }
            set { _Login = value; }
        }

        string _RefundInvoice;

        /// <summary>
        /// Gets or sets the value of variable RefundInvoice.
        /// </summary>
        [TestVariable("61c0f0e9-0a2a-44e0-ab64-1026c2c3e6dc")]
        public string RefundInvoice
        {
            get { return _RefundInvoice; }
            set { _RefundInvoice = value; }
        }

        string _Account;

        /// <summary>
        /// Gets or sets the value of variable Account.
        /// </summary>
        [TestVariable("19d0ef1b-6292-425e-9948-f0810a5fb9f4")]
        public string Account
        {
            get { return _Account; }
            set { _Account = value; }
        }

        string _RefundGoods;

        /// <summary>
        /// Gets or sets the value of variable RefundGoods.
        /// </summary>
        [TestVariable("5e44e481-7ca3-49a9-a1df-51903a5a3e53")]
        public string RefundGoods
        {
            get { return _RefundGoods; }
            set { _RefundGoods = value; }
        }

        string _RefundVAT;

        /// <summary>
        /// Gets or sets the value of variable RefundVAT.
        /// </summary>
        [TestVariable("ad344e85-b55f-4e2c-abd2-1a2b93022f75")]
        public string RefundVAT
        {
            get { return _RefundVAT; }
            set { _RefundVAT = value; }
        }

        string _Depot;

        /// <summary>
        /// Gets or sets the value of variable Depot.
        /// </summary>
        [TestVariable("adaeec62-ec1c-4edd-af6b-9f7e7c8b857c")]
        public string Depot
        {
            get { return _Depot; }
            set { _Depot = value; }
        }

        string _excelFileLocation;

        /// <summary>
        /// Gets or sets the value of variable excelFileLocation.
        /// </summary>
        [TestVariable("7c622eb4-0373-41a7-954c-f7815e2b9ee0")]
        public string excelFileLocation
        {
            get { return _excelFileLocation; }
            set { _excelFileLocation = value; }
        }

        string _SAPReturnsInvoice;

        /// <summary>
        /// Gets or sets the value of variable SAPReturnsInvoice.
        /// </summary>
        [TestVariable("c9aeeb5c-a5a3-4155-87eb-e6b43f073d6f")]
        public string SAPReturnsInvoice
        {
            get { return _SAPReturnsInvoice; }
            set { _SAPReturnsInvoice = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Ql1054K8QA3SalesOrderProcessingD.OrderNumber'.", repo.Ql1054K8QA3SalesOrderProcessingD.OrderNumberInfo, new RecordItemIndex(0));
            Validate.Exists(repo.Ql1054K8QA3SalesOrderProcessingD.OrderNumberInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'Ql1054K8QA3SalesOrderProcessingD.OrderNumber' at 27;10.", repo.Ql1054K8QA3SalesOrderProcessingD.OrderNumberInfo, new RecordItemIndex(1));
            repo.Ql1054K8QA3SalesOrderProcessingD.OrderNumber.DoubleClick("27;10");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'L' with focus on 'Ql1054K8QA3SalesOrderProcessingD.OrderNumber'.", repo.Ql1054K8QA3SalesOrderProcessingD.OrderNumberInfo, new RecordItemIndex(2));
            repo.Ql1054K8QA3SalesOrderProcessingD.OrderNumber.PressKeys("L", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Ql1054K8QA3SalesOrderProcessingD.OrderNumber2'.", repo.Ql1054K8QA3SalesOrderProcessingD.OrderNumber2Info, new RecordItemIndex(3));
            Validate.Exists(repo.Ql1054K8QA3SalesOrderProcessingD.OrderNumber2Info);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'Ql1054K8QA3SalesOrderProcessingD.OrderNumber2'.", repo.Ql1054K8QA3SalesOrderProcessingD.OrderNumber2Info, new RecordItemIndex(4));
            repo.Ql1054K8QA3SalesOrderProcessingD.OrderNumber2.PressKeys("{Tab}", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Ql1054K8QA3SalesOrderProcessingD.Display'.", repo.Ql1054K8QA3SalesOrderProcessingD.DisplayInfo, new RecordItemIndex(5));
            Validate.Exists(repo.Ql1054K8QA3SalesOrderProcessingD.DisplayInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Ql1054K8QA3SalesOrderProcessingD.Display' at 24;9.", repo.Ql1054K8QA3SalesOrderProcessingD.DisplayInfo, new RecordItemIndex(6));
            repo.Ql1054K8QA3SalesOrderProcessingD.Display.Click("24;9");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Kclient.DisplaySalesOrderHistory' at 63;8.", repo.Kclient.DisplaySalesOrderHistoryInfo, new RecordItemIndex(7));
            repo.Kclient.DisplaySalesOrderHistory.Click("63;8");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'SalesOrderHistory.OrderNumber'.", repo.SalesOrderHistory.OrderNumberInfo, new RecordItemIndex(8));
            Validate.Exists(repo.SalesOrderHistory.OrderNumberInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'SalesOrderHistory.OrderNumber' and assigning its value to variable 'RefundOrderNumber'.", repo.SalesOrderHistory.OrderNumberInfo, new RecordItemIndex(9));
            RefundOrderNumber = repo.SalesOrderHistory.OrderNumber.Element.GetAttributeValueText("Text");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", RefundOrderNumber, new RecordItemIndex(10));
            
            WriteToTextFileRefund(FilePath, RefundOrderNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SalesOrderHistory.RowRow1.Cell62116' at 18;8.", repo.SalesOrderHistory.RowRow1.Cell62116Info, new RecordItemIndex(12));
            repo.SalesOrderHistory.RowRow1.Cell62116.Click("18;8");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'SalesOrderHistory.RowRow1.D723manager'.", repo.SalesOrderHistory.RowRow1.D723managerInfo, new RecordItemIndex(13));
            Validate.Exists(repo.SalesOrderHistory.RowRow1.D723managerInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'AccessibleName' from item 'SalesOrderHistory.RowRow1.D723manager' and assigning its value to variable 'Login'.", repo.SalesOrderHistory.RowRow1.D723managerInfo, new RecordItemIndex(14));
            Login = repo.SalesOrderHistory.RowRow1.D723manager.Element.GetAttributeValueText("AccessibleName");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Login, new RecordItemIndex(15));
            
            WriteToTextFileRefund(FilePath, Login);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'SalesOrderHistory.RowRow1.CD723'.", repo.SalesOrderHistory.RowRow1.CD723Info, new RecordItemIndex(17));
            Validate.Exists(repo.SalesOrderHistory.RowRow1.CD723Info);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'AccessibleName' from item 'SalesOrderHistory.RowRow1.CD723' and assigning its value to variable 'Account'.", repo.SalesOrderHistory.RowRow1.CD723Info, new RecordItemIndex(18));
            Account = repo.SalesOrderHistory.RowRow1.CD723.Element.GetAttributeValueText("AccessibleName");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Account, new RecordItemIndex(19));
            
            WriteToTextFileRefund(FilePath, Account);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'SalesOrderHistory.RowRow1.Cell00010968'.", repo.SalesOrderHistory.RowRow1.Cell00010968Info, new RecordItemIndex(21));
            Validate.Exists(repo.SalesOrderHistory.RowRow1.Cell00010968Info);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'AccessibleName' from item 'SalesOrderHistory.RowRow1.Cell00010968' and assigning its value to variable 'RefundInvoice'.", repo.SalesOrderHistory.RowRow1.Cell00010968Info, new RecordItemIndex(22));
            RefundInvoice = repo.SalesOrderHistory.RowRow1.Cell00010968.Element.GetAttributeValueText("AccessibleName");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", RefundInvoice, new RecordItemIndex(23));
            
            WriteToTextFileRefund(FilePath, RefundInvoice);
            Delay.Milliseconds(0);
            
            setSAPReturnsInvoice(Depot);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'SalesOrderHistory.RowRow1.Cell6511'.", repo.SalesOrderHistory.RowRow1.Cell6511Info, new RecordItemIndex(26));
            Validate.Exists(repo.SalesOrderHistory.RowRow1.Cell6511Info);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'AccessibleName' from item 'SalesOrderHistory.RowRow1.Cell6511' and assigning its value to variable 'RefundGoods'.", repo.SalesOrderHistory.RowRow1.Cell6511Info, new RecordItemIndex(27));
            RefundGoods = repo.SalesOrderHistory.RowRow1.Cell6511.Element.GetAttributeValueText("AccessibleName");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", RefundGoods, new RecordItemIndex(28));
            
            WriteToTextFileRefund(FilePath, RefundGoods);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'SalesOrderHistory.RowRow1.Cell1302'.", repo.SalesOrderHistory.RowRow1.Cell1302Info, new RecordItemIndex(30));
            Validate.Exists(repo.SalesOrderHistory.RowRow1.Cell1302Info);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'AccessibleName' from item 'SalesOrderHistory.RowRow1.Cell1302' and assigning its value to variable 'RefundVAT'.", repo.SalesOrderHistory.RowRow1.Cell1302Info, new RecordItemIndex(31));
            RefundVAT = repo.SalesOrderHistory.RowRow1.Cell1302.Element.GetAttributeValueText("AccessibleName");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", RefundVAT, new RecordItemIndex(32));
            
            WriteToTextFileRefund(FilePath, RefundVAT);
            Delay.Milliseconds(0);
            
            WriteToTextFileRefund(FilePath, "---------------------------------------------");
            Delay.Milliseconds(0);
            
            WriteToTextFileRefund(FilePath, "");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'SalesOrder193931HJIlford.ButtonOK'.", repo.SalesOrder193931HJIlford.ButtonOKInfo, new RecordItemIndex(36));
            Validate.Exists(repo.SalesOrder193931HJIlford.ButtonOKInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SalesOrder193931HJIlford.ButtonOK' at 40;10.", repo.SalesOrder193931HJIlford.ButtonOKInfo, new RecordItemIndex(37));
            repo.SalesOrder193931HJIlford.ButtonOK.Click("40;10");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Ql1054K8QA3SalesOrderProcessingD.Process'.", repo.Ql1054K8QA3SalesOrderProcessingD.ProcessInfo, new RecordItemIndex(38));
            Validate.Exists(repo.Ql1054K8QA3SalesOrderProcessingD.ProcessInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Ql1054K8QA3SalesOrderProcessingD.Process' at 53;18.", repo.Ql1054K8QA3SalesOrderProcessingD.ProcessInfo, new RecordItemIndex(39));
            repo.Ql1054K8QA3SalesOrderProcessingD.Process.Click("53;18");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ActionCreditNoteCR18320.ButtonOK'.", repo.ActionCreditNoteCR18320.ButtonOKInfo, new RecordItemIndex(40));
            Validate.Exists(repo.ActionCreditNoteCR18320.ButtonOKInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ActionCreditNoteCR18320.ButtonOK' at 29;7.", repo.ActionCreditNoteCR18320.ButtonOKInfo, new RecordItemIndex(41));
            repo.ActionCreditNoteCR18320.ButtonOK.Click("29;7");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(42));
            Delay.Duration(5000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
