///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace K8_UK_PP_Regression
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The K8SetSBOStatus_PP recording.
    /// </summary>
    [TestModule("4ff1c936-6c1e-4d90-9972-a2fb8d1ce5af", ModuleType.Recording, 1)]
    public partial class K8SetSBOStatus_PP : ITestModule
    {
        /// <summary>
        /// Holds an instance of the K8_UK_SOP_RegressionRepository repository.
        /// </summary>
        public static K8_UK_SOP_RegressionRepository repo = K8_UK_SOP_RegressionRepository.Instance;

        static K8SetSBOStatus_PP instance = new K8SetSBOStatus_PP();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public K8SetSBOStatus_PP()
        {
            NewVariable = "SBO";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static K8SetSBOStatus_PP Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable SBOStatus_1.
        /// </summary>
        [TestVariable("507ea350-f885-42d7-a452-65039a69762c")]
        public string SBOStatus_1
        {
            get { return repo.SBOStatus_1; }
            set { repo.SBOStatus_1 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable SBOStatus_2.
        /// </summary>
        [TestVariable("de53037e-4ae9-4e63-9c2c-68bcf03b36d8")]
        public string SBOStatus_2
        {
            get { return repo.SBOStatus_2; }
            set { repo.SBOStatus_2 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable SBOStatus_3.
        /// </summary>
        [TestVariable("454cd857-9be1-44cf-8dc3-3d10da0d1562")]
        public string SBOStatus_3
        {
            get { return repo.SBOStatus_3; }
            set { repo.SBOStatus_3 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable SBOStatus_4.
        /// </summary>
        [TestVariable("a061b182-2669-4777-aa76-1f503a5136e2")]
        public string SBOStatus_4
        {
            get { return repo.SBOStatus_4; }
            set { repo.SBOStatus_4 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable NewVariable.
        /// </summary>
        [TestVariable("046f69b6-98a7-43ac-9bca-9d9f79601a1b")]
        public string NewVariable
        {
            get { return repo.NewVariable; }
            set { repo.NewVariable = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(0));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.StatusInfo, new RecordItemIndex(1));
            Validate.Exists(repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.StatusInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status' at Center.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.StatusInfo, new RecordItemIndex(2));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'SBO' with focus on 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.StatusText'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.StatusTextInfo, new RecordItemIndex(3));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.StatusText.PressKeys("SBO", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.StatusText'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.StatusTextInfo, new RecordItemIndex(4));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.StatusText.PressKeys("{Tab}", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status1'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status1Info, new RecordItemIndex(5));
            Validate.Exists(repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status1Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status1' at Center.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status1Info, new RecordItemIndex(6));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status1.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'SBO' with focus on 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status1Text'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status1TextInfo, new RecordItemIndex(7));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status1Text.PressKeys("SBO", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status1Text'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status1TextInfo, new RecordItemIndex(8));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status1Text.PressKeys("{Tab}", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status2'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status2Info, new RecordItemIndex(9));
            Validate.Exists(repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status2Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status2' at Center.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status2Info, new RecordItemIndex(10));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status2.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'SBO' with focus on 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status2Text'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status2TextInfo, new RecordItemIndex(11));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status2Text.PressKeys("SBO", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status2Text'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status2TextInfo, new RecordItemIndex(12));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status2Text.PressKeys("{Tab}", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status3'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status3Info, new RecordItemIndex(13));
            Validate.Exists(repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status3Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status3' at Center.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status3Info, new RecordItemIndex(14));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status3.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'SBO' with focus on 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status3Text'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status3TextInfo, new RecordItemIndex(15));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status3Text.PressKeys("SBO", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{tab}' with focus on 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status3Text'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status3TextInfo, new RecordItemIndex(16));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Table.Status3Text.PressKeys("{tab}", 100);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
