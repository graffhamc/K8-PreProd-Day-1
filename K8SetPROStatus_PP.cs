///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace K8_UK_PP_Regression
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The K8SetPROStatus_PP recording.
    /// </summary>
    [TestModule("d799531d-2e5d-40d2-80f2-c455cfbb5402", ModuleType.Recording, 1)]
    public partial class K8SetPROStatus_PP : ITestModule
    {
        /// <summary>
        /// Holds an instance of the K8_UK_SOP_RegressionRepository repository.
        /// </summary>
        public static K8_UK_SOP_RegressionRepository repo = K8_UK_SOP_RegressionRepository.Instance;

        static K8SetPROStatus_PP instance = new K8SetPROStatus_PP();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public K8SetPROStatus_PP()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static K8SetPROStatus_PP Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable PROStatus_1.
        /// </summary>
        [TestVariable("14dcd365-c5e8-492b-be6c-03122308316d")]
        public string PROStatus_1
        {
            get { return repo.PROStatus_1; }
            set { repo.PROStatus_1 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PROStatus_2.
        /// </summary>
        [TestVariable("f70c5818-c99a-4c7b-9c6e-9e0bf6b777bd")]
        public string PROStatus_2
        {
            get { return repo.PROStatus_2; }
            set { repo.PROStatus_2 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PROStatus_3.
        /// </summary>
        [TestVariable("ca00e50b-0767-42a7-bb0f-19c37638cd33")]
        public string PROStatus_3
        {
            get { return repo.PROStatus_3; }
            set { repo.PROStatus_3 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable PROStatus_4.
        /// </summary>
        [TestVariable("bfe1cdd7-dbc3-4d4b-b026-ffa0ca888a5c")]
        public string PROStatus_4
        {
            get { return repo.PROStatus_4; }
            set { repo.PROStatus_4 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(0));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Ql1054K8QA3SalesOrderProcessingD.Table.Status1'.", repo.Ql1054K8QA3SalesOrderProcessingD.Table.Status1Info, new RecordItemIndex(1));
            Validate.Exists(repo.Ql1054K8QA3SalesOrderProcessingD.Table.Status1Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Ql1054K8QA3SalesOrderProcessingD.Table.Status1' at Center.", repo.Ql1054K8QA3SalesOrderProcessingD.Table.Status1Info, new RecordItemIndex(2));
            repo.Ql1054K8QA3SalesOrderProcessingD.Table.Status1.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'PRO' with focus on 'Ql1054K8QA3SalesOrderProcessingD.Status'.", repo.Ql1054K8QA3SalesOrderProcessingD.StatusInfo, new RecordItemIndex(3));
            repo.Ql1054K8QA3SalesOrderProcessingD.Status.PressKeys("PRO", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'Ql1054K8QA3SalesOrderProcessingD.Status'.", repo.Ql1054K8QA3SalesOrderProcessingD.StatusInfo, new RecordItemIndex(4));
            repo.Ql1054K8QA3SalesOrderProcessingD.Status.PressKeys("{Tab}", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Ql1054K8QA3SalesOrderProcessingD.Table.Status5'.", repo.Ql1054K8QA3SalesOrderProcessingD.Table.Status5Info, new RecordItemIndex(5));
            Validate.Exists(repo.Ql1054K8QA3SalesOrderProcessingD.Table.Status5Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Ql1054K8QA3SalesOrderProcessingD.Table.Status5' at Center.", repo.Ql1054K8QA3SalesOrderProcessingD.Table.Status5Info, new RecordItemIndex(6));
            repo.Ql1054K8QA3SalesOrderProcessingD.Table.Status5.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'PRO' with focus on 'Ql1054K8QA3SalesOrderProcessingD.Status'.", repo.Ql1054K8QA3SalesOrderProcessingD.StatusInfo, new RecordItemIndex(7));
            repo.Ql1054K8QA3SalesOrderProcessingD.Status.PressKeys("PRO", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'Ql1054K8QA3SalesOrderProcessingD.Status'.", repo.Ql1054K8QA3SalesOrderProcessingD.StatusInfo, new RecordItemIndex(8));
            repo.Ql1054K8QA3SalesOrderProcessingD.Status.PressKeys("{Tab}", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Ql1054K8QA3SalesOrderProcessingD.Table.Status6'.", repo.Ql1054K8QA3SalesOrderProcessingD.Table.Status6Info, new RecordItemIndex(9));
            Validate.Exists(repo.Ql1054K8QA3SalesOrderProcessingD.Table.Status6Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Ql1054K8QA3SalesOrderProcessingD.Table.Status6' at Center.", repo.Ql1054K8QA3SalesOrderProcessingD.Table.Status6Info, new RecordItemIndex(10));
            repo.Ql1054K8QA3SalesOrderProcessingD.Table.Status6.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'PRO' with focus on 'Ql1054K8QA3SalesOrderProcessingD.Status'.", repo.Ql1054K8QA3SalesOrderProcessingD.StatusInfo, new RecordItemIndex(11));
            repo.Ql1054K8QA3SalesOrderProcessingD.Status.PressKeys("PRO", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'Ql1054K8QA3SalesOrderProcessingD.Status'.", repo.Ql1054K8QA3SalesOrderProcessingD.StatusInfo, new RecordItemIndex(12));
            repo.Ql1054K8QA3SalesOrderProcessingD.Status.PressKeys("{Tab}", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Ql1054K8QA3SalesOrderProcessingD.Table.Status'.", repo.Ql1054K8QA3SalesOrderProcessingD.Table.StatusInfo, new RecordItemIndex(13));
            Validate.Exists(repo.Ql1054K8QA3SalesOrderProcessingD.Table.StatusInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Ql1054K8QA3SalesOrderProcessingD.Table.Status' at Center.", repo.Ql1054K8QA3SalesOrderProcessingD.Table.StatusInfo, new RecordItemIndex(14));
            repo.Ql1054K8QA3SalesOrderProcessingD.Table.Status.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'PRO' with focus on 'Ql1054K8QA3SalesOrderProcessingD.Status'.", repo.Ql1054K8QA3SalesOrderProcessingD.StatusInfo, new RecordItemIndex(15));
            repo.Ql1054K8QA3SalesOrderProcessingD.Status.PressKeys("PRO", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'Ql1054K8QA3SalesOrderProcessingD.Status'.", repo.Ql1054K8QA3SalesOrderProcessingD.StatusInfo, new RecordItemIndex(16));
            repo.Ql1054K8QA3SalesOrderProcessingD.Status.PressKeys("{Tab}", 100);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
