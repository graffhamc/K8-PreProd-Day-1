///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace K8_UK_PP_Regression
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The K8Login_PP recording.
    /// </summary>
    [TestModule("e2b29a1c-0005-4358-a8b0-3d848d62e7ca", ModuleType.Recording, 1)]
    public partial class K8Login_PP : ITestModule
    {
        /// <summary>
        /// Holds an instance of the K8_UK_SOP_RegressionRepository repository.
        /// </summary>
        public static K8_UK_SOP_RegressionRepository repo = K8_UK_SOP_RegressionRepository.Instance;

        static K8Login_PP instance = new K8Login_PP();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public K8Login_PP()
        {
            Login = "d961manager";
            Password = "d961manager";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static K8Login_PP Instance
        {
            get { return instance; }
        }

#region Variables

        string _Login;

        /// <summary>
        /// Gets or sets the value of variable Login.
        /// </summary>
        [TestVariable("4cd03e27-716b-4638-b07f-fa8594889623")]
        public string Login
        {
            get { return _Login; }
            set { _Login = value; }
        }

        string _Password;

        /// <summary>
        /// Gets or sets the value of variable Password.
        /// </summary>
        [TestVariable("aaced623-4e10-4e20-9ed3-c9c8164d672c")]
        public string Password
        {
            get { return _Password; }
            set { _Password = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            //Report.Log(ReportLevel.Info, "Application", "Run application 'C:\\Program Files (x86)\\ADP\\KCML\\kclient.exe' with arguments '-h pl1139 -v K8UPGRD -V 790' in normal mode.", new RecordItemIndex(0));
            //Host.Local.RunApplication("C:\\Program Files (x86)\\ADP\\KCML\\kclient.exe", "-h pl1139 -v K8UPGRD -V 790", "C:\\Program Files (x86)\\ADP\\KCML", false);
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Application", "Run application 'C:\\Program Files (x86)\\ADP\\KCML\\kclient.exe' with arguments '-h sl1071 -v K8UKPPD\r\n -V 790' in normal mode.", new RecordItemIndex(1));
            Host.Local.RunApplication("C:\\Program Files (x86)\\ADP\\KCML\\kclient.exe", "-h sl1071 -v K8UKPPD\r\n -V 790", "C:\\Program Files (x86)\\ADP\\KCML", false);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(2));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'KCMLClient.Text1381'.", repo.KCMLClient.Text1381Info, new RecordItemIndex(3));
            Validate.Exists(repo.KCMLClient.Text1381Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'KCMLClient.Text1381' at 79;9.", repo.KCMLClient.Text1381Info, new RecordItemIndex(4));
            repo.KCMLClient.Text1381.DoubleClick("79;9");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Login' with focus on 'KCMLClient.Text1381'.", repo.KCMLClient.Text1381Info, new RecordItemIndex(5));
            repo.KCMLClient.Text1381.PressKeys(Login, 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'KCMLClient.Password'.", repo.KCMLClient.PasswordInfo, new RecordItemIndex(6));
            Validate.Exists(repo.KCMLClient.PasswordInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Password' with focus on 'KCMLClient.Password'.", repo.KCMLClient.PasswordInfo, new RecordItemIndex(7));
            repo.KCMLClient.Password.PressKeys(Password, 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'KCMLClient.Connect'.", repo.KCMLClient.ConnectInfo, new RecordItemIndex(8));
            Validate.Exists(repo.KCMLClient.ConnectInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'KCMLClient.Connect' at 45;7.", repo.KCMLClient.ConnectInfo, new RecordItemIndex(9));
            repo.KCMLClient.Connect.Click("45;7");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(10));
            Delay.Duration(5000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
