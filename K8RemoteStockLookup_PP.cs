///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace K8_UK_PP_Regression
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The K8RemoteStockLookup_PP recording.
    /// </summary>
    [TestModule("5db1cc41-1dc9-4cb6-85cf-d6b858bba8f4", ModuleType.Recording, 1)]
    public partial class K8RemoteStockLookup_PP : ITestModule
    {
        /// <summary>
        /// Holds an instance of the K8_UK_SOP_RegressionRepository repository.
        /// </summary>
        public static K8_UK_SOP_RegressionRepository repo = K8_UK_SOP_RegressionRepository.Instance;

        static K8RemoteStockLookup_PP instance = new K8RemoteStockLookup_PP();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public K8RemoteStockLookup_PP()
        {
            StockItem = "DCK1430";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static K8RemoteStockLookup_PP Instance
        {
            get { return instance; }
        }

#region Variables

        string _StockItem;

        /// <summary>
        /// Gets or sets the value of variable StockItem.
        /// </summary>
        [TestVariable("54015383-adb0-4c78-aff5-8128526260e9")]
        public string StockItem
        {
            get { return _StockItem; }
            set { _StockItem = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Branch Files') on item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.BranchFiles'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.BranchFilesInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.BranchFilesInfo, "Text", "Branch Files");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.BranchFiles' at Center.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.BranchFilesInfo, new RecordItemIndex(1));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.BranchFiles.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Manager's Utilities') on item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.ManagersUtilities'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.ManagersUtilitiesInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.ManagersUtilitiesInfo, "Text", "Manager's Utilities");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.ManagersUtilities' at Center.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.ManagersUtilitiesInfo, new RecordItemIndex(3));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.ManagersUtilities.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Branch Lookup Sequence') on item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.BranchLookupSequence'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.BranchLookupSequenceInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.BranchLookupSequenceInfo, "Text", "Branch Lookup Sequence");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.BranchLookupSequence' at Center.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.BranchLookupSequenceInfo, new RecordItemIndex(5));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.BranchLookupSequence.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.SelfInfo, new RecordItemIndex(6));
            Validate.Exists(repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.SelfInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(7));
            Delay.Duration(1000, false);
            
            Report.Screenshot(ReportLevel.Success, "User", "Note the pegged branch lookup sequence (if any)", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Self, false, new RecordItemIndex(8));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Exit') on item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Exit'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.ExitInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.ExitInfo, "Text", "Exit");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Exit' at Center.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.ExitInfo, new RecordItemIndex(10));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Exit.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(11));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Branch Stock File') on item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.BranchStockFile'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.BranchStockFileInfo, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.BranchStockFileInfo, "Text", "Branch Stock File");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.BranchStockFile' at Center.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.BranchStockFileInfo, new RecordItemIndex(13));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.BranchStockFile.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Stock Display') on item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.StockDisplay'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.StockDisplayInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.StockDisplayInfo, "Text", "Stock Display");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.StockDisplay' at Center.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.StockDisplayInfo, new RecordItemIndex(15));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.StockDisplay.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Text'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.TextInfo, new RecordItemIndex(16));
            Validate.Exists(repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.TextInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Text' at Center.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.TextInfo, new RecordItemIndex(17));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Text.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$StockItem' with focus on 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Text'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.TextInfo, new RecordItemIndex(18));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Text.PressKeys(StockItem, 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Text'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.TextInfo, new RecordItemIndex(19));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Text.PressKeys("{Tab}", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Remote') on item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Remote'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.RemoteInfo, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.RemoteInfo, "Text", "Remote");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Remote' at Center.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.RemoteInfo, new RecordItemIndex(21));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Remote.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(22));
            Delay.Duration(5000, false);
            
            Report.Screenshot(ReportLevel.Success, "User", "Check that any pegged orders are displayed first (if any)", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Self, false, new RecordItemIndex(23));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Exit'.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.ExitInfo, new RecordItemIndex(24));
            Validate.Exists(repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.ExitInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Exit' at Center.", repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.ExitInfo, new RecordItemIndex(25));
            repo.K8UKPPD1Sl1071K8UKPPDHowdensK8HJ0.Exit.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
