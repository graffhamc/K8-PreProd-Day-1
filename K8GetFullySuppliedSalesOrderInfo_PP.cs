///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace K8_UK_PP_Regression
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The K8GetFullySuppliedSalesOrderInfo_PP recording.
    /// </summary>
    [TestModule("2b225b85-5820-4ba9-b62e-20c0f40c429a", ModuleType.Recording, 1)]
    public partial class K8GetFullySuppliedSalesOrderInfo_PP : ITestModule
    {
        /// <summary>
        /// Holds an instance of the K8_UK_SOP_RegressionRepository repository.
        /// </summary>
        public static K8_UK_SOP_RegressionRepository repo = K8_UK_SOP_RegressionRepository.Instance;

        static K8GetFullySuppliedSalesOrderInfo_PP instance = new K8GetFullySuppliedSalesOrderInfo_PP();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public K8GetFullySuppliedSalesOrderInfo_PP()
        {
            excelFileLocation = "";
            TodayDate = "";
            SalesOrderNum = "";
            FilePath = "C:/Temp/SalesOrderInfoUK.txt";
            TestName = "ONE TIME CASH CUSTOMER UK";
            UserID = "";
            Account = "";
            SalesInvoiceNumber = "";
            Depot = "";
            SAPSalesInvoice = "";
            Goods = "";
            VAT = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static K8GetFullySuppliedSalesOrderInfo_PP Instance
        {
            get { return instance; }
        }

#region Variables

        string _excelFileLocation;

        /// <summary>
        /// Gets or sets the value of variable excelFileLocation.
        /// </summary>
        [TestVariable("2a9aaa73-f142-45cc-a409-e0226d27ae20")]
        public string excelFileLocation
        {
            get { return _excelFileLocation; }
            set { _excelFileLocation = value; }
        }

        string _TodayDate;

        /// <summary>
        /// Gets or sets the value of variable TodayDate.
        /// </summary>
        [TestVariable("640a18a3-f5c4-48bf-ba0c-7188348dc3f4")]
        public string TodayDate
        {
            get { return _TodayDate; }
            set { _TodayDate = value; }
        }

        string _SalesOrderNum;

        /// <summary>
        /// Gets or sets the value of variable SalesOrderNum.
        /// </summary>
        [TestVariable("1a77b469-021f-470b-aa41-72e868d09ddf")]
        public string SalesOrderNum
        {
            get { return _SalesOrderNum; }
            set { _SalesOrderNum = value; }
        }

        string _FilePath;

        /// <summary>
        /// Gets or sets the value of variable FilePath.
        /// </summary>
        [TestVariable("7efa5c98-d1d8-42dc-9ff6-23088f916e62")]
        public string FilePath
        {
            get { return _FilePath; }
            set { _FilePath = value; }
        }

        string _TestName;

        /// <summary>
        /// Gets or sets the value of variable TestName.
        /// </summary>
        [TestVariable("4852d575-811a-4405-a6b4-3bbb58204cc7")]
        public string TestName
        {
            get { return _TestName; }
            set { _TestName = value; }
        }

        string _UserID;

        /// <summary>
        /// Gets or sets the value of variable UserID.
        /// </summary>
        [TestVariable("134987b9-c35a-473d-b211-66e2d7d99420")]
        public string UserID
        {
            get { return _UserID; }
            set { _UserID = value; }
        }

        string _Account;

        /// <summary>
        /// Gets or sets the value of variable Account.
        /// </summary>
        [TestVariable("5516e048-5909-49cd-9167-f616f8ed57fe")]
        public string Account
        {
            get { return _Account; }
            set { _Account = value; }
        }

        string _SalesInvoiceNumber;

        /// <summary>
        /// Gets or sets the value of variable SalesInvoiceNumber.
        /// </summary>
        [TestVariable("7562499c-77ed-4c75-9f7d-005e9cc5fb1c")]
        public string SalesInvoiceNumber
        {
            get { return _SalesInvoiceNumber; }
            set { _SalesInvoiceNumber = value; }
        }

        string _Depot;

        /// <summary>
        /// Gets or sets the value of variable Depot.
        /// </summary>
        [TestVariable("32f06705-c830-4d5c-b716-12c826a66a08")]
        public string Depot
        {
            get { return _Depot; }
            set { _Depot = value; }
        }

        string _SAPSalesInvoice;

        /// <summary>
        /// Gets or sets the value of variable SAPSalesInvoice.
        /// </summary>
        [TestVariable("8fa26f70-633e-4385-8610-0f85982cebc6")]
        public string SAPSalesInvoice
        {
            get { return _SAPSalesInvoice; }
            set { _SAPSalesInvoice = value; }
        }

        string _Goods;

        /// <summary>
        /// Gets or sets the value of variable Goods.
        /// </summary>
        [TestVariable("a7b20f39-b14f-4668-be5e-8477a1c8f3af")]
        public string Goods
        {
            get { return _Goods; }
            set { _Goods = value; }
        }

        string _VAT;

        /// <summary>
        /// Gets or sets the value of variable VAT.
        /// </summary>
        [TestVariable("0e1b6f69-19da-46cd-8f1b-b4281f01f862")]
        public string VAT
        {
            get { return _VAT; }
            set { _VAT = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            SetDate();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Ql1054K8QA3SalesOrderProcessingD.OrderNumber'.", repo.Ql1054K8QA3SalesOrderProcessingD.OrderNumberInfo, new RecordItemIndex(1));
            Validate.Exists(repo.Ql1054K8QA3SalesOrderProcessingD.OrderNumberInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'Ql1054K8QA3SalesOrderProcessingD.OrderNumber' at 30;10.", repo.Ql1054K8QA3SalesOrderProcessingD.OrderNumberInfo, new RecordItemIndex(2));
            repo.Ql1054K8QA3SalesOrderProcessingD.OrderNumber.DoubleClick("30;10");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'L' with focus on 'Ql1054K8QA3SalesOrderProcessingD.OrderNumber'.", repo.Ql1054K8QA3SalesOrderProcessingD.OrderNumberInfo, new RecordItemIndex(3));
            repo.Ql1054K8QA3SalesOrderProcessingD.OrderNumber.PressKeys("L", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Ql1054K8QA3SalesOrderProcessingD.OrderNumber2'.", repo.Ql1054K8QA3SalesOrderProcessingD.OrderNumber2Info, new RecordItemIndex(4));
            Validate.Exists(repo.Ql1054K8QA3SalesOrderProcessingD.OrderNumber2Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'Ql1054K8QA3SalesOrderProcessingD.OrderNumber2'.", repo.Ql1054K8QA3SalesOrderProcessingD.OrderNumber2Info, new RecordItemIndex(5));
            repo.Ql1054K8QA3SalesOrderProcessingD.OrderNumber2.PressKeys("{Tab}", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(6));
            Delay.Duration(2000, false);
            
            Report.Screenshot(ReportLevel.Success, "User", "Sales Order", repo.Ql1054K8QA3SalesOrderProcessingD.Self, false, new RecordItemIndex(7));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Ql1054K8QA3SalesOrderProcessingD.Display'.", repo.Ql1054K8QA3SalesOrderProcessingD.DisplayInfo, new RecordItemIndex(8));
            Validate.Exists(repo.Ql1054K8QA3SalesOrderProcessingD.DisplayInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Ql1054K8QA3SalesOrderProcessingD.Display' at 35;9.", repo.Ql1054K8QA3SalesOrderProcessingD.DisplayInfo, new RecordItemIndex(9));
            repo.Ql1054K8QA3SalesOrderProcessingD.Display.Click("35;9");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Kclient.DisplaySalesOrderHistory' at 107;9.", repo.Kclient.DisplaySalesOrderHistoryInfo, new RecordItemIndex(10));
            repo.Kclient.DisplaySalesOrderHistory.Click("107;9");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'SalesOrderHistory.OrderNumber'.", repo.SalesOrderHistory.OrderNumberInfo, new RecordItemIndex(11));
            Validate.Exists(repo.SalesOrderHistory.OrderNumberInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'SalesOrderHistory.OrderNumber' and assigning its value to variable 'SalesOrderNum'.", repo.SalesOrderHistory.OrderNumberInfo, new RecordItemIndex(12));
            SalesOrderNum = repo.SalesOrderHistory.OrderNumber.Element.GetAttributeValueText("Text");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", SalesOrderNum, new RecordItemIndex(13));
            
            WriteToTextFile(FilePath, "=============================================");
            Delay.Milliseconds(0);
            
            WriteToTextFile(FilePath, TestName);
            Delay.Milliseconds(0);
            
            WriteToTextFile(FilePath, TodayDate);
            Delay.Milliseconds(0);
            
            WriteToTextFile(FilePath, "=============================================");
            Delay.Milliseconds(0);
            
            WriteToTextFile(FilePath, SalesOrderNum);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'SalesOrder193931HJIlford.RowRow.D961manager'.", repo.SalesOrder193931HJIlford.RowRow.D961managerInfo, new RecordItemIndex(19));
            Validate.Exists(repo.SalesOrder193931HJIlford.RowRow.D961managerInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'AccessibleName' from item 'SalesOrder193931HJIlford.RowRow.D961manager' and assigning its value to variable 'UserID'.", repo.SalesOrder193931HJIlford.RowRow.D961managerInfo, new RecordItemIndex(20));
            UserID = repo.SalesOrder193931HJIlford.RowRow.D961manager.Element.GetAttributeValueText("AccessibleName");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", UserID, new RecordItemIndex(21));
            
            WriteToTextFile(FilePath, UserID);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'SalesOrder193931HJIlford.RowRow.Cell1101515959'.", repo.SalesOrder193931HJIlford.RowRow.Cell1101515959Info, new RecordItemIndex(23));
            Validate.Exists(repo.SalesOrder193931HJIlford.RowRow.Cell1101515959Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'AccessibleName' from item 'SalesOrder193931HJIlford.RowRow.Cell1101515959' and assigning its value to variable 'Account'.", repo.SalesOrder193931HJIlford.RowRow.Cell1101515959Info, new RecordItemIndex(24));
            Account = repo.SalesOrder193931HJIlford.RowRow.Cell1101515959.Element.GetAttributeValueText("AccessibleName");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Account, new RecordItemIndex(25));
            
            WriteToTextFile(FilePath, Account);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'SalesOrder193931HJIlford.RowRow.Cell00131012'.", repo.SalesOrder193931HJIlford.RowRow.Cell00131012Info, new RecordItemIndex(27));
            Validate.Exists(repo.SalesOrder193931HJIlford.RowRow.Cell00131012Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'AccessibleName' from item 'SalesOrder193931HJIlford.RowRow.Cell00131012' and assigning its value to variable 'SalesInvoiceNumber'.", repo.SalesOrder193931HJIlford.RowRow.Cell00131012Info, new RecordItemIndex(28));
            SalesInvoiceNumber = repo.SalesOrder193931HJIlford.RowRow.Cell00131012.Element.GetAttributeValueText("AccessibleName");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", SalesInvoiceNumber, new RecordItemIndex(29));
            
            WriteToTextFile(FilePath, SalesInvoiceNumber);
            Delay.Milliseconds(0);
            
            setSAPSalesInvoice(Depot);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'SalesOrder193931HJIlford.RowRow.Cell0'.", repo.SalesOrder193931HJIlford.RowRow.Cell0Info, new RecordItemIndex(32));
            Validate.Exists(repo.SalesOrder193931HJIlford.RowRow.Cell0Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'AccessibleName' from item 'SalesOrder193931HJIlford.RowRow.Cell0' and assigning its value to variable 'Goods'.", repo.SalesOrder193931HJIlford.RowRow.Cell0Info, new RecordItemIndex(33));
            Goods = repo.SalesOrder193931HJIlford.RowRow.Cell0.Element.GetAttributeValueText("AccessibleName");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Goods, new RecordItemIndex(34));
            
            WriteToTextFile(FilePath, Goods);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'SalesOrder193931HJIlford.RowRow.Cell01'.", repo.SalesOrder193931HJIlford.RowRow.Cell01Info, new RecordItemIndex(36));
            Validate.Exists(repo.SalesOrder193931HJIlford.RowRow.Cell01Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'AccessibleName' from item 'SalesOrder193931HJIlford.RowRow.Cell01' and assigning its value to variable 'VAT'.", repo.SalesOrder193931HJIlford.RowRow.Cell01Info, new RecordItemIndex(37));
            VAT = repo.SalesOrder193931HJIlford.RowRow.Cell01.Element.GetAttributeValueText("AccessibleName");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", VAT, new RecordItemIndex(38));
            
            WriteToTextFile(FilePath, VAT);
            Delay.Milliseconds(0);
            
            WriteToTextFile(FilePath, "---------------------------------------------");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'SalesOrder193931HJIlford.ButtonOK'.", repo.SalesOrder193931HJIlford.ButtonOKInfo, new RecordItemIndex(41));
            Validate.Exists(repo.SalesOrder193931HJIlford.ButtonOKInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SalesOrder193931HJIlford.ButtonOK' at Center.", repo.SalesOrder193931HJIlford.ButtonOKInfo, new RecordItemIndex(42));
            repo.SalesOrder193931HJIlford.ButtonOK.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Ql1054K8QA3SalesOrderProcessingD.Process'.", repo.Ql1054K8QA3SalesOrderProcessingD.ProcessInfo, new RecordItemIndex(43));
            Validate.Exists(repo.Ql1054K8QA3SalesOrderProcessingD.ProcessInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Ql1054K8QA3SalesOrderProcessingD.Process' at 47;20.", repo.Ql1054K8QA3SalesOrderProcessingD.ProcessInfo, new RecordItemIndex(44));
            repo.Ql1054K8QA3SalesOrderProcessingD.Process.Click("47;20");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ActionSalesOrderSL17707.ButtonOK'.", repo.ActionSalesOrderSL17707.ButtonOKInfo, new RecordItemIndex(45));
            Validate.Exists(repo.ActionSalesOrderSL17707.ButtonOKInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ActionSalesOrderSL17707.ButtonOK' at 51;11.", repo.ActionSalesOrderSL17707.ButtonOKInfo, new RecordItemIndex(46));
            repo.ActionSalesOrderSL17707.ButtonOK.Click("51;11");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(47));
            Delay.Duration(2000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
